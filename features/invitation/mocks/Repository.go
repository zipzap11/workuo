// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	invitation "workuo/features/invitation"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// AcceptInvitation provides a mock function with given fields: invId
func (_m *Repository) AcceptInvitation(invId int) error {
	ret := _m.Called(invId)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(invId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetInvitationByID provides a mock function with given fields: id
func (_m *Repository) GetInvitationByID(id int) (invitation.InvitationCore, error) {
	ret := _m.Called(id)

	var r0 invitation.InvitationCore
	if rf, ok := ret.Get(0).(func(int) invitation.InvitationCore); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(invitation.InvitationCore)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetInvitationByJobID provides a mock function with given fields: jobId
func (_m *Repository) GetInvitationByJobID(jobId int) ([]invitation.InvitationCore, error) {
	ret := _m.Called(jobId)

	var r0 []invitation.InvitationCore
	if rf, ok := ret.Get(0).(func(int) []invitation.InvitationCore); ok {
		r0 = rf(jobId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]invitation.InvitationCore)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(jobId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetInvitationByUserID provides a mock function with given fields: userId
func (_m *Repository) GetInvitationByUserID(userId int) ([]invitation.InvitationCore, error) {
	ret := _m.Called(userId)

	var r0 []invitation.InvitationCore
	if rf, ok := ret.Get(0).(func(int) []invitation.InvitationCore); ok {
		r0 = rf(userId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]invitation.InvitationCore)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(userId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InviteUser provides a mock function with given fields: _a0
func (_m *Repository) InviteUser(_a0 invitation.InvitationCore) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(invitation.InvitationCore) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RejectInvitation provides a mock function with given fields: invId
func (_m *Repository) RejectInvitation(invId int) error {
	ret := _m.Called(invId)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(invId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
